#validateCookie:
#  switch:
#    - condition: ${!incoming.headers.testcookie}
#      next: returnUnauthorized
#
#authenticate:
#  template: extract-token
#  requestType: post
#  headers:
#    cookie: ${incoming.headers.testcookie}
#  body:
#    role: "ROLE_ADMINISTRATOR"
#  result: permission
#
#validatePermission:
#  switch:
#    - condition: ${permission}
#      next: getIntents
#  next: returnUnauthorized

getIntents:
  call: http.get
  args:
    url: http://host.docker.internal:9200/intents/_search?size=10000
  result: getIntentsResult

getIntentsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-intents-with-examples
    body:
      hits: ${getIntentsResult.response.body.hits.hits}
  result: getIntentDataResult

getDomainFile:
  call: http.get
  args:
    url: http://localhost:8080/domain-file
    headers:
      testcookie: "test"
  result: getDomainDataResult

getIntentsExampleCount:
  call: http.post
  args:
    url: http://host.docker.internal:9200/intents/_search/template
    body:
      id: "intents-with-examples-count"
  result: getIntentCountResult

assignResults:
  assign:
    intents:
      intents: ${getIntentDataResult.response.body}
      inmodel: ${getDomainDataResult.response.body}
      count: ${getIntentCountResult.response.body}

mapIntentsData:
  call: http.post
  args:
    url: http://host.docker.internal:3000/dmapper/get-intents-full
    body:
      intents: ${intents}
  result: getIntentDataResult
  next: returnSuccess

returnSuccess:
  return: ${getIntentDataResult.response.body}
  next: end

returnUnauthorized:
  return: "error: unauthorized"
  status: 401
  next: end
